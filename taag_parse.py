from os import sys
from bs4 import BeautifulSoup

# Mark to separate each ascii art
START_MARK = "---start---"
END_MARK = "---end---"

# This script is intended to handle the html file generated by the website
repo_name = "https://github.com/patorjk/figlet.js"


def parse_html_to_ascii_art(html_file: str) -> list[tuple[str, str, int]]:
    with open(html_file, "r", encoding="utf-8") as file:
        html_content = file.read()

    soup = BeautifulSoup(html_content, "html.parser")

    ascii_arts = []

    for pre_tag in soup.find_all(
        "pre", attrs={"class": "fig", "contenteditable": "true"}
    ):
        font_name = pre_tag.get("id").strip()
        ascii_art = pre_tag.text
        line_nums = ascii_art.count("\n") + 1
        ascii_arts.append((font_name, ascii_art, line_nums))

    return ascii_arts


def save_ascii_art_file(ascii_arts: list[tuple[str, str, int]], output_file: str):
    cur_line = 0
    with open(output_file, "w", encoding="utf-8") as file:
        # Write the header
        file.write(f"# ASCII Art file. Inspired by: {repo_name}\n")
        file.write(f"{START_MARK}\n")
        file.write(f"msg nums: {len(ascii_arts)}\n")
        file.write(f"{END_MARK}\n\n")

        cur_line += 5

        for index, (font_name, ascii_art, line_nums) in enumerate(ascii_arts):
            file.write(f"{START_MARK}\n")
            file.write(f"msg index: {index}\n")
            file.write(f"font name: {font_name}\n")

            cur_line += 3

            file.write(f"line range: {cur_line + 2 + 1},{cur_line + 2 + line_nums}\n")
            file.write(f"msg content:\n{ascii_art}\n")
            file.write(f"{END_MARK}\n\n")

            cur_line += line_nums + 4


# if started as main
if __name__ == "__main__":

    # receive input arguments html_file and output_file
    if len(sys.argv) == 3:
        html_file = sys.argv[1]
        output_file = sys.argv[2]
    else:
        print("Usage: python main.py <html_file> <output_file>")
        sys.exit(1)

    ascii_arts = parse_html_to_ascii_art(html_file)
    save_ascii_art_file(ascii_arts, output_file)
